(* Lexer para Gramática No. 1 - Expresiones aritméticas simples para variables *)

(* Introducir cualquier header aqui *)

let delim = [' ''\t''\n']
let ws = delim+
let letter = ['A'-'Z''a'-'z']
let digit = ['0'-'9']
let id = letter(letter|digit)*
let alphanumeric = letter | digit


(* Definición del punto de entrada y reglas *)
rule tokens =
  'if'        { TOK_IF }
  | 'else'      { TOK_ELSE }
  | 'while'     { TOK_WHILE }
  | 'do'        { TOK_DO }
  | 'for'       { TOK_FOR }
  | 'int'       { TOK_INT }
  | 'float'     { TOK_FLOAT }
  | 'double'    { TOK_DOUBLE }
  | 'char'      { TOK_CHAR }
  | 'bool'      { TOK_BOOL }
  | 'true'      { TOK_TRUE }
  | 'false'     { TOK_FALSE }
  | '='     { TOK_EQUAL }
  | digit+ '.' digit+ { TOK_FLOATCONST }
  | digit+         { TOK_INTCONST }
  | letter (alphanumeric|'_')* { TOK_IDENT }
  | whitespace     { skip }

  (* Introducir cualquier trailer aqui *)